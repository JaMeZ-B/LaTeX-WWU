%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Montag, 13. Juni 2016 20:11 Uhr MESZ
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
768 768 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
768.000 0 l
768.000 768.000 l
0 768.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 758 758 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
1.00000 0 0 RG
1.00000 -1.00000 758.000 758.000 rc
newpath
2.00000 1.00000 m
14.0891 12.3670 l
23.8897 21.5649 l
32.9881 30.0889 l
42.4080 38.8979 l
50.3255 46.2882 l
57.5151 52.9874 l
65.0851 60.0281 l
71.4918 65.9760 l
77.8997 71.9144 l
84.6964 78.2008 l
90.3822 83.4495 l
96.4353 89.0262 l
101.339 93.5361 l
106.233 98.0273 l
111.136 102.519 l
115.289 106.316 l
119.457 110.121 l
123.993 114.253 l
127.386 117.339 l
131.172 120.775 l
134.934 124.183 l
138.720 127.607 l
141.739 130.331 l
144.379 132.710 l
147.785 135.773 l
151.177 138.818 l
154.192 141.519 l
156.847 143.892 l
159.512 146.271 l
162.139 148.610 l
164.765 150.944 l
167.421 153.301 l
169.694 155.314 l
171.954 157.312 l
174.244 159.332 l
176.476 161.297 l
177.988 162.627 l
180.255 164.617 l
182.149 166.276 l
184.060 167.946 l
185.931 169.580 l
187.828 171.232 l
189.324 172.534 l
191.234 174.192 l
192.743 175.499 l
194.247 176.801 l
195.750 178.099 l
197.266 179.406 l
198.381 180.366 l
199.895 181.667 l
201.403 182.961 l
202.911 184.253 l
204.455 185.572 l
205.568 186.522 l
206.702 187.488 l
208.226 188.784 l
209.359 189.746 l
210.468 190.686 l
211.627 191.668 l
212.734 192.603 l
214.260 193.890 l
215.387 194.838 l
216.527 195.797 l
217.671 196.756 l
218.810 197.710 l
219.942 198.656 l
221.046 199.577 l
221.799 200.204 l
222.937 201.151 l
224.078 202.097 l
224.827 202.718 l
225.974 203.667 l
227.092 204.590 l
228.240 205.537 l
229.380 206.474 l
230.486 207.381 l
231.274 208.026 l
232.394 208.942 l
233.140 209.551 l
233.897 210.167 l
234.675 210.800 l
235.413 211.400 l
236.184 212.025 l
236.936 212.634 l
237.282 212.914 l
238.041 213.527 l
238.432 213.842 l
239.193 214.455 l
239.935 215.051 l
240.682 215.652 l
241.446 216.264 l
241.826 216.568 l
242.601 217.188 l
243.360 217.793 l
244.102 218.385 l
244.848 218.978 l
245.612 219.584 l
245.988 219.882 l
246.753 220.488 l
247.505 221.082 l
248.248 221.667 l
249.021 222.276 l
249.774 222.867 l
250.138 223.153 l
250.537 223.465 l
251.273 224.040 l
251.651 224.336 l
252.407 224.925 l
252.769 225.207 l
253.533 225.801 l
254.281 226.381 l
254.674 226.685 l
255.426 227.266 l
255.818 227.569 l
256.179 227.847 l
256.548 228.132 l
256.957 228.446 l
257.326 228.730 l
257.704 229.020 l
258.089 229.314 l
258.442 229.585 l
258.819 229.873 l
259.193 230.159 l
259.593 230.464 l
259.946 230.732 l
260.353 231.042 l
260.720 231.322 l
261.084 231.598 l
261.475 231.894 l
261.867 232.191 l
262.224 232.461 l
262.603 232.748 l
262.974 233.027 l
263.375 233.329 l
263.722 233.590 l
264.121 233.890 l
264.496 234.171 l
264.867 234.450 l
265.238 234.728 l
265.617 235.011 l
266.019 235.311 l
266.387 235.585 l
266.751 235.856 l
267.139 236.145 l
267.527 236.432 l
267.875 236.690 l
268.632 237.251 l
269.036 237.548 l
269.421 237.832 l
269.765 238.085 l
270.151 238.370 l
270.540 238.655 l
270.928 238.939 l
271.287 239.202 l
271.659 239.473 l
272.043 239.754 l
272.427 240.033 l
272.821 240.320 l
273.169 240.572 l
273.560 240.856 l
273.952 241.140 l
274.331 241.413 l
274.674 241.661 l
275.083 241.956 l
275.429 242.205 l
275.831 242.494 l
276.188 242.749 l
276.579 243.029 l
276.951 243.295 l
277.340 243.572 l
277.696 243.826 l
278.081 244.099 l
278.481 244.383 l
278.829 244.630 l
279.205 244.895 l
279.593 245.169 l
279.973 245.437 l
280.340 245.695 l
280.748 245.982 l
281.115 246.239 l
281.506 246.513 l
281.861 246.760 l
282.249 247.030 l
282.614 247.284 l
282.995 247.549 l
283.368 247.807 l
283.758 248.077 l
284.134 248.337 l
284.519 248.602 l
284.900 248.864 l
285.250 249.104 l
285.652 249.379 l
286.011 249.625 l
286.394 249.886 l
286.761 250.136 l
287.168 250.412 l
287.520 250.651 l
287.920 250.921 l
288.285 251.168 l
288.684 251.436 l
289.028 251.667 l
289.420 251.930 l
289.798 252.183 l
290.176 252.436 l
290.553 252.687 l
290.915 252.928 l
291.307 253.187 l
291.680 253.434 l
292.072 253.693 l
292.428 253.927 l
292.821 254.185 l
293.197 254.432 l
293.572 254.677 l
293.964 254.933 l
294.325 255.168 l
294.695 255.408 l
295.103 255.673 l
295.473 255.911 l
295.851 256.155 l
296.235 256.402 l
296.589 256.628 l
296.965 256.869 l
297.339 257.108 l
297.739 257.362 l
298.092 257.586 l
298.499 257.844 l
298.867 258.076 l
299.230 258.304 l
299.621 258.550 l
300.014 258.795 l
300.371 259.018 l
300.750 259.254 l
301.120 259.484 l
301.521 259.732 l
301.869 259.947 l
302.267 260.192 l
302.642 260.422 l
303.013 260.649 l
303.385 260.876 l
303.764 261.106 l
304.165 261.350 l
304.534 261.572 l
304.897 261.791 l
305.286 262.025 l
305.674 262.257 l
306.022 262.464 l
306.434 262.710 l
306.779 262.914 l
307.182 263.153 l
307.567 263.380 l
307.911 263.581 l
308.298 263.808 l
308.687 264.035 l
309.074 264.260 l
309.434 264.468 l
309.805 264.683 l
310.190 264.904 l
310.573 265.124 l
310.968 265.349 l
311.315 265.547 l
311.706 265.768 l
312.099 265.990 l
312.477 266.203 l
312.821 266.396 l
313.229 266.624 l
313.575 266.817 l
313.978 267.040 l
314.334 267.237 l
314.725 267.452 l
315.098 267.656 l
315.486 267.868 l
315.843 268.062 l
316.228 268.270 l
316.627 268.485 l
316.975 268.672 l
317.351 268.873 l
317.739 269.080 l
318.119 269.281 l
318.487 269.475 l
318.895 269.690 l
319.261 269.881 l
319.653 270.085 l
320.007 270.269 l
320.395 270.469 l
320.760 270.657 l
321.142 270.852 l
321.514 271.042 l
321.905 271.239 l
322.281 271.429 l
322.665 271.622 l
323.047 271.812 l
323.397 271.986 l
323.799 272.185 l
324.158 272.362 l
324.541 272.549 l
324.907 272.728 l
325.314 272.925 l
325.667 273.094 l
326.067 273.286 l
326.431 273.460 l
326.830 273.649 l
327.174 273.811 l
327.566 273.995 l
327.945 274.172 l
328.323 274.347 l
328.700 274.521 l
329.062 274.687 l
329.453 274.865 l
329.826 275.035 l
330.219 275.211 l
330.574 275.371 l
330.967 275.545 l
331.343 275.712 l
331.719 275.877 l
332.111 276.048 l
332.472 276.205 l
332.841 276.364 l
333.250 276.539 l
333.619 276.696 l
333.997 276.856 l
334.382 277.018 l
334.735 277.165 l
335.112 277.321 l
335.486 277.475 l
335.886 277.638 l
336.239 277.781 l
336.646 277.945 l
337.013 278.092 l
337.377 278.237 l
337.768 278.391 l
338.160 278.544 l
338.517 278.682 l
338.897 278.828 l
339.267 278.970 l
339.668 279.122 l
340.015 279.252 l
340.414 279.401 l
340.789 279.539 l
341.160 279.676 l
341.531 279.811 l
341.910 279.947 l
342.312 280.091 l
342.680 280.221 l
343.044 280.349 l
343.432 280.484 l
343.820 280.618 l
344.168 280.737 l
344.580 280.876 l
344.925 280.992 l
345.329 281.126 l
345.714 281.252 l
346.058 281.364 l
346.444 281.489 l
346.834 281.613 l
347.221 281.735 l
347.580 281.847 l
347.952 281.962 l
348.337 282.080 l
348.720 282.196 l
349.114 282.314 l
349.462 282.417 l
349.853 282.531 l
350.245 282.645 l
350.624 282.753 l
350.967 282.850 l
351.376 282.964 l
351.722 283.059 l
352.125 283.168 l
352.481 283.264 l
352.872 283.368 l
353.244 283.465 l
353.633 283.566 l
353.990 283.657 l
354.374 283.753 l
354.774 283.852 l
355.122 283.937 l
355.498 284.028 l
355.886 284.120 l
356.266 284.209 l
356.633 284.293 l
357.041 284.386 l
357.408 284.467 l
357.799 284.553 l
358.154 284.630 l
358.542 284.712 l
358.907 284.788 l
359.288 284.866 l
359.661 284.941 l
360.051 285.019 l
360.427 285.091 l
360.812 285.165 l
361.193 285.236 l
361.544 285.300 l
361.945 285.372 l
362.304 285.435 l
362.687 285.501 l
363.054 285.563 l
363.461 285.630 l
363.813 285.686 l
364.213 285.749 l
364.578 285.805 l
364.977 285.865 l
365.321 285.915 l
365.713 285.971 l
366.091 286.023 l
366.469 286.074 l
366.846 286.123 l
367.208 286.169 l
367.600 286.217 l
367.973 286.262 l
368.365 286.307 l
368.721 286.347 l
369.114 286.390 l
369.490 286.429 l
369.865 286.467 l
370.257 286.504 l
370.618 286.538 l
370.988 286.571 l
371.396 286.605 l
371.766 286.635 l
372.144 286.665 l
372.529 286.693 l
372.882 286.718 l
373.259 286.742 l
373.632 286.766 l
374.032 286.789 l
374.385 286.808 l
374.792 286.829 l
375.160 286.846 l
375.523 286.861 l
375.914 286.876 l
376.307 286.890 l
376.664 286.901 l
377.043 286.911 l
377.413 286.920 l
377.815 286.928 l
378.162 286.933 l
378.560 286.938 l
378.935 286.941 l
379.306 286.942 l
379.678 286.942 l
380.057 286.941 l
380.458 286.938 l
380.827 286.933 l
381.190 286.928 l
381.579 286.920 l
381.967 286.911 l
382.315 286.902 l
382.727 286.889 l
383.072 286.877 l
383.475 286.861 l
383.860 286.845 l
384.204 286.829 l
384.591 286.809 l
384.980 286.788 l
385.368 286.766 l
385.727 286.743 l
386.099 286.719 l
386.483 286.692 l
386.867 286.664 l
387.261 286.633 l
387.608 286.605 l
387.999 286.572 l
388.392 286.537 l
388.770 286.502 l
389.114 286.469 l
389.522 286.427 l
389.869 286.391 l
390.271 286.348 l
390.628 286.308 l
391.019 286.263 l
391.391 286.218 l
391.779 286.171 l
392.136 286.125 l
392.521 286.075 l
392.921 286.021 l
393.269 285.973 l
393.644 285.920 l
394.033 285.863 l
394.412 285.806 l
394.780 285.750 l
395.188 285.686 l
395.554 285.627 l
395.946 285.563 l
396.301 285.503 l
396.688 285.436 l
397.053 285.372 l
397.435 285.304 l
397.808 285.235 l
398.198 285.163 l
398.574 285.091 l
398.958 285.016 l
399.340 284.941 l
399.690 284.870 l
400.092 284.788 l
400.451 284.713 l
400.834 284.632 l
401.200 284.553 l
401.607 284.464 l
401.960 284.385 l
402.360 284.295 l
402.724 284.211 l
403.123 284.117 l
403.467 284.036 l
403.859 283.942 l
404.238 283.849 l
404.616 283.755 l
404.993 283.661 l
405.355 283.569 l
405.746 283.467 l
406.119 283.370 l
406.512 283.266 l
406.868 283.170 l
407.260 283.063 l
407.636 282.960 l
408.012 282.855 l
408.404 282.744 l
408.765 282.641 l
409.135 282.534 l
409.543 282.415 l
409.913 282.306 l
410.291 282.193 l
410.675 282.076 l
411.028 281.968 l
411.405 281.852 l
411.779 281.735 l
412.179 281.609 l
412.532 281.496 l
412.939 281.365 l
413.306 281.245 l
413.670 281.126 l
414.061 280.996 l
414.453 280.864 l
414.811 280.744 l
415.190 280.614 l
415.560 280.486 l
415.961 280.347 l
416.308 280.225 l
416.707 280.084 l
417.082 279.950 l
417.453 279.816 l
417.825 279.681 l
418.203 279.542 l
418.605 279.394 l
418.973 279.256 l
419.337 279.120 l
419.725 278.972 l
420.113 278.824 l
420.461 278.690 l
420.873 278.530 l
421.218 278.396 l
421.622 278.237 l
422.007 278.084 l
422.351 277.946 l
422.738 277.791 l
423.127 277.633 l
423.514 277.475 l
423.873 277.327 l
424.245 277.173 l
424.630 277.012 l
425.013 276.851 l
425.407 276.685 l
425.755 276.537 l
426.146 276.369 l
426.538 276.200 l
426.917 276.036 l
427.260 275.886 l
427.669 275.706 l
428.015 275.553 l
428.418 275.374 l
428.774 275.214 l
429.165 275.038 l
429.537 274.869 l
429.926 274.692 l
430.283 274.529 l
430.667 274.351 l
431.067 274.166 l
431.415 274.004 l
431.791 273.827 l
432.179 273.644 l
432.559 273.464 l
432.926 273.289 l
433.334 273.094 l
433.701 272.917 l
434.092 272.727 l
434.447 272.554 l
434.835 272.365 l
435.200 272.185 l
435.581 271.997 l
435.954 271.811 l
436.345 271.616 l
436.720 271.428 l
437.105 271.234 l
437.486 271.041 l
437.837 270.862 l
438.238 270.657 l
438.598 270.472 l
438.980 270.275 l
439.347 270.085 l
439.754 269.873 l
440.106 269.688 l
440.506 269.478 l
440.871 269.286 l
441.270 269.074 l
441.614 268.891 l
442.006 268.682 l
442.384 268.479 l
442.763 268.275 l
443.140 268.071 l
443.502 267.874 l
443.893 267.660 l
444.266 267.456 l
444.659 267.240 l
445.014 267.044 l
445.407 266.826 l
445.783 266.617 l
446.158 266.407 l
446.550 266.187 l
446.911 265.984 l
447.281 265.775 l
447.689 265.544 l
448.059 265.333 l
448.437 265.117 l
448.822 264.897 l
449.175 264.693 l
449.552 264.476 l
449.926 264.259 l
450.325 264.027 l
450.678 263.821 l
451.086 263.583 l
451.453 263.367 l
451.817 263.153 l
452.207 262.922 l
452.600 262.689 l
452.957 262.477 l
453.336 262.250 l
453.706 262.029 l
454.108 261.788 l
454.455 261.579 l
454.854 261.338 l
455.228 261.110 l
455.600 260.885 l
455.971 260.658 l
456.350 260.426 l
456.752 260.180 l
457.120 259.953 l
457.483 259.729 l
457.872 259.488 l
458.260 259.248 l
458.608 259.031 l
459.020 258.774 l
459.365 258.558 l
459.769 258.305 l
460.154 258.062 l
460.497 257.845 l
460.884 257.601 l
461.273 257.354 l
461.661 257.107 l
462.020 256.878 l
462.392 256.640 l
462.776 256.394 l
463.160 256.147 l
463.554 255.893 l
463.901 255.669 l
464.292 255.416 l
464.685 255.161 l
465.063 254.915 l
465.407 254.690 l
465.816 254.423 l
466.162 254.196 l
466.564 253.932 l
466.921 253.697 l
467.312 253.439 l
467.684 253.193 l
468.072 252.935 l
468.429 252.698 l
468.814 252.442 l
469.214 252.175 l
469.562 251.942 l
469.937 251.690 l
470.326 251.429 l
470.705 251.174 l
471.073 250.926 l
471.481 250.650 l
471.848 250.401 l
472.239 250.135 l
472.594 249.894 l
472.982 249.629 l
473.346 249.380 l
473.728 249.119 l
474.101 248.863 l
474.491 248.594 l
474.867 248.335 l
475.252 248.070 l
475.633 247.806 l
475.983 247.564 l
476.385 247.285 l
476.744 247.035 l
477.127 246.768 l
477.494 246.512 l
477.901 246.227 l
478.253 245.980 l
478.653 245.700 l
479.018 245.443 l
479.416 245.162 l
479.760 244.919 l
480.152 244.642 l
480.531 244.374 l
480.909 244.106 l
481.286 243.838 l
481.648 243.580 l
482.040 243.301 l
482.413 243.034 l
482.805 242.753 l
483.161 242.499 l
483.553 242.217 l
483.930 241.946 l
484.305 241.676 l
484.697 241.393 l
485.058 241.132 l
485.428 240.864 l
485.836 240.568 l
486.206 240.300 l
486.584 240.025 l
486.968 239.745 l
487.322 239.487 l
487.698 239.212 l
488.072 238.938 l
488.472 238.645 l
488.825 238.386 l
489.232 238.087 l
489.600 237.817 l
489.963 237.549 l
490.354 237.260 l
490.747 236.970 l
491.104 236.706 l
491.853 236.150 l
492.254 235.851 l
492.601 235.593 l
493.000 235.296 l
493.375 235.016 l
493.746 234.739 l
494.118 234.460 l
494.497 234.177 l
494.898 233.875 l
495.266 233.598 l
495.630 233.325 l
496.019 233.032 l
496.406 232.740 l
496.754 232.477 l
497.167 232.165 l
497.512 231.904 l
497.915 231.598 l
498.644 231.044 l
499.031 230.750 l
499.420 230.453 l
500.166 229.884 l
500.538 229.599 l
501.306 229.011 l
501.701 228.708 l
502.048 228.442 l
502.439 228.141 l
502.832 227.838 l
503.210 227.547 l
503.962 226.966 l
504.308 226.698 l
505.067 226.110 l
505.831 225.518 l
506.219 225.216 l
506.576 224.938 l
507.360 224.326 l
507.708 224.055 l
508.472 223.457 l
508.852 223.159 l
509.628 222.551 l
510.386 221.955 l
510.740 221.676 l
511.493 221.082 l
512.247 220.487 l
513.014 219.880 l
513.779 219.273 l
514.531 218.675 l
514.891 218.390 l
515.640 217.793 l
516.400 217.187 l
516.800 216.867 l
517.563 216.256 l
518.299 215.666 l
519.056 215.058 l
519.795 214.464 l
520.559 213.848 l
520.952 213.531 l
521.700 212.927 l
522.452 212.319 l
523.205 211.709 l
523.983 211.078 l
524.730 210.470 l
525.468 209.869 l
526.219 209.257 l
526.972 208.643 l
527.379 208.310 l
528.501 207.391 l
529.250 206.776 l
530.401 205.831 l
531.147 205.217 l
532.264 204.296 l
533.045 203.651 l
533.777 203.046 l
534.901 202.114 l
536.062 201.151 l
536.791 200.545 l
537.567 199.899 l
538.685 198.967 l
539.847 197.996 l
540.978 197.049 l
542.109 196.101 l
543.214 195.173 l
544.366 194.204 l
545.855 192.949 l
546.999 191.983 l
548.532 190.686 l
550.021 189.423 l
551.160 188.456 l
553.037 186.858 l
554.194 185.871 l
555.710 184.576 l
557.202 183.299 l
558.333 182.329 l
559.847 181.029 l
561.351 179.735 l
562.877 178.420 l
564.765 176.789 l
566.256 175.499 l
567.776 174.182 l
569.293 172.865 l
571.191 171.215 l
573.048 169.598 l
575.324 167.611 l
576.831 166.292 l
578.732 164.627 l
580.601 162.987 l
582.869 160.993 l
584.765 159.323 l
587.033 157.322 l
588.931 155.645 l
591.184 153.651 l
593.856 151.280 l
595.726 149.619 l
597.993 147.601 l
600.645 145.237 l
603.265 142.898 l
605.923 140.520 l
608.936 137.818 l
611.951 135.111 l
615.363 132.041 l
618.402 129.301 l
621.400 126.594 l
624.434 123.850 l
627.838 120.765 l
631.604 117.347 l
635.747 113.579 l
639.908 109.787 l
643.690 106.335 l
647.485 102.865 l
652.006 98.7244 l
656.895 94.2389 l
662.214 89.3486 l
667.118 84.8321 l
672.772 79.6148 l
679.205 73.6684 l
686.363 67.0378 l
692.434 61.4039 l
699.952 54.4133 l
707.533 47.3526 l
713.937 41.3767 l
722.254 33.6044 l
731.711 24.7509 l
742.659 14.4814 l
753.610 4.18951 l
757.000 1.00000 l
S
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
q
1.00000 0 0 RG
1.00000 -1.00000 758.000 758.000 rc
newpath
2.00000 756.000 m
13.7225 744.977 l
24.2811 735.068 l
33.3452 726.576 l
42.7798 717.754 l
51.4610 709.653 l
58.6411 702.964 l
65.4461 696.636 l
72.6424 689.956 l
79.0321 684.037 l
85.4553 678.098 l
91.1284 672.862 l
96.7877 667.649 l
102.088 662.776 l
107.359 657.939 l
112.652 653.093 l
116.834 649.271 l
121.366 645.138 l
125.495 641.380 l
128.920 638.267 l
132.664 634.871 l
135.698 632.124 l
139.093 629.055 l
142.109 626.335 l
144.753 623.952 l
148.164 620.885 l
151.177 618.181 l
154.192 615.480 l
156.488 613.428 l
159.120 611.079 l
161.748 608.737 l
164.041 606.698 l
166.675 604.359 l
168.555 602.693 l
170.811 600.697 l
172.728 599.004 l
174.588 597.364 l
176.476 595.702 l
177.988 594.372 l
180.255 592.382 l
182.149 590.723 l
184.060 589.053 l
185.931 587.419 l
187.828 585.767 l
189.324 584.466 l
191.234 582.808 l
192.743 581.500 l
194.247 580.198 l
195.750 578.900 l
197.266 577.593 l
198.381 576.633 l
199.895 575.332 l
201.403 574.038 l
203.300 572.414 l
204.455 571.427 l
205.568 570.477 l
207.075 569.194 l
208.226 568.215 l
209.718 566.948 l
210.875 565.968 l
211.992 565.023 l
213.126 564.065 l
214.260 563.109 l
215.014 562.475 l
216.135 561.532 l
217.279 560.572 l
218.402 559.631 l
219.558 558.664 l
220.672 557.734 l
221.799 556.795 l
222.574 556.151 l
223.721 555.198 l
224.457 554.587 l
225.575 553.661 l
226.349 553.022 l
227.471 552.097 l
228.604 551.163 l
229.728 550.240 l
230.486 549.619 l
231.274 548.973 l
232.005 548.375 l
233.140 547.448 l
234.280 546.520 l
235.022 545.917 l
235.806 545.281 l
236.528 544.696 l
236.936 544.365 l
237.685 543.760 l
238.432 543.157 l
238.805 542.857 l
239.550 542.257 l
240.334 541.627 l
241.058 541.046 l
241.826 540.431 l
242.601 539.811 l
243.360 539.206 l
244.102 538.615 l
244.467 538.324 l
245.221 537.725 l
245.988 537.117 l
246.753 536.511 l
247.505 535.917 l
247.865 535.634 l
248.614 535.043 l
249.021 534.723 l
249.774 534.132 l
250.138 533.847 l
250.537 533.534 l
251.273 532.959 l
251.651 532.663 l
252.030 532.368 l
252.769 531.792 l
253.533 531.198 l
253.926 530.893 l
254.674 530.314 l
255.426 529.733 l
255.818 529.430 l
256.548 528.867 l
257.326 528.269 l
257.704 527.979 l
258.089 527.685 l
258.819 527.126 l
259.193 526.841 l
259.593 526.535 l
259.946 526.267 l
260.353 525.957 l
260.720 525.678 l
261.475 525.105 l
261.867 524.808 l
262.224 524.538 l
262.603 524.251 l
262.974 523.972 l
263.375 523.670 l
263.722 523.409 l
264.121 523.109 l
264.496 522.828 l
264.867 522.550 l
265.238 522.272 l
265.617 521.988 l
266.019 521.689 l
266.387 521.414 l
266.751 521.143 l
267.139 520.855 l
267.527 520.567 l
267.875 520.309 l
268.287 520.003 l
268.632 519.748 l
269.036 519.451 l
269.421 519.167 l
269.765 518.914 l
270.151 518.630 l
270.540 518.344 l
270.928 518.060 l
271.287 517.797 l
271.659 517.526 l
272.043 517.245 l
272.427 516.966 l
272.821 516.679 l
273.169 516.427 l
273.560 516.143 l
273.952 515.859 l
274.331 515.586 l
274.674 515.338 l
275.083 515.043 l
275.429 514.795 l
275.831 514.506 l
276.188 514.250 l
276.579 513.970 l
276.951 513.704 l
277.340 513.427 l
277.696 513.173 l
278.081 512.900 l
278.481 512.616 l
278.829 512.370 l
279.205 512.104 l
279.593 511.830 l
279.973 511.562 l
280.340 511.304 l
280.748 511.017 l
281.115 510.760 l
281.506 510.487 l
281.861 510.239 l
282.249 509.969 l
282.614 509.715 l
282.995 509.450 l
283.368 509.192 l
283.758 508.922 l
284.134 508.662 l
284.519 508.397 l
284.900 508.135 l
285.250 507.895 l
285.652 507.620 l
286.011 507.374 l
286.394 507.113 l
286.761 506.864 l
287.168 506.587 l
287.520 506.348 l
287.920 506.078 l
288.285 505.832 l
288.684 505.563 l
289.028 505.332 l
289.420 505.069 l
289.798 504.816 l
290.176 504.563 l
290.553 504.312 l
290.915 504.071 l
291.307 503.812 l
291.680 503.565 l
292.072 503.306 l
292.428 503.072 l
292.821 502.814 l
293.197 502.567 l
293.572 502.322 l
293.964 502.066 l
294.325 501.831 l
294.695 501.591 l
295.103 501.327 l
295.473 501.088 l
295.851 500.844 l
296.235 500.597 l
296.589 500.371 l
296.965 500.130 l
297.339 499.891 l
297.739 499.637 l
298.092 499.413 l
298.499 499.155 l
298.867 498.924 l
299.230 498.695 l
299.621 498.449 l
300.014 498.204 l
300.371 497.981 l
300.750 497.745 l
301.120 497.515 l
301.521 497.267 l
301.869 497.052 l
302.267 496.807 l
302.642 496.577 l
303.013 496.350 l
303.385 496.123 l
303.764 495.893 l
304.165 495.650 l
304.534 495.427 l
304.897 495.208 l
305.286 494.975 l
305.674 494.742 l
306.022 494.535 l
306.434 494.289 l
306.779 494.085 l
307.182 493.846 l
307.567 493.620 l
307.911 493.418 l
308.298 493.191 l
308.687 492.964 l
309.074 492.739 l
309.434 492.531 l
309.805 492.316 l
310.190 492.095 l
310.573 491.875 l
310.968 491.650 l
311.315 491.452 l
311.706 491.231 l
312.099 491.009 l
312.477 490.796 l
312.821 490.603 l
313.229 490.375 l
313.575 490.182 l
313.978 489.959 l
314.334 489.762 l
314.725 489.547 l
315.098 489.343 l
315.486 489.131 l
315.843 488.937 l
316.228 488.729 l
316.627 488.514 l
316.975 488.327 l
317.351 488.126 l
317.739 487.919 l
318.119 487.718 l
318.487 487.524 l
318.895 487.310 l
319.261 487.118 l
319.653 486.914 l
320.007 486.730 l
320.395 486.530 l
320.760 486.342 l
321.142 486.147 l
321.514 485.958 l
321.905 485.760 l
322.281 485.570 l
322.665 485.377 l
323.047 485.187 l
323.397 485.013 l
323.799 484.814 l
324.158 484.638 l
324.541 484.450 l
324.907 484.272 l
325.314 484.074 l
325.667 483.905 l
326.067 483.713 l
326.431 483.539 l
326.830 483.350 l
327.174 483.188 l
327.566 483.004 l
327.945 482.827 l
328.323 482.652 l
328.700 482.478 l
329.062 482.312 l
329.453 482.134 l
329.826 481.965 l
330.219 481.788 l
330.574 481.629 l
330.967 481.454 l
331.343 481.287 l
331.719 481.122 l
332.111 480.951 l
332.472 480.794 l
332.841 480.635 l
333.250 480.460 l
333.619 480.303 l
333.997 480.143 l
334.382 479.981 l
334.735 479.834 l
335.112 479.678 l
335.486 479.524 l
335.886 479.361 l
336.239 479.218 l
336.646 479.054 l
337.013 478.907 l
337.377 478.763 l
337.768 478.609 l
338.160 478.455 l
338.517 478.317 l
338.897 478.171 l
339.267 478.029 l
339.668 477.877 l
340.015 477.747 l
340.414 477.598 l
340.789 477.460 l
341.160 477.324 l
341.531 477.188 l
341.910 477.052 l
342.312 476.908 l
342.680 476.778 l
343.044 476.650 l
343.432 476.515 l
343.820 476.381 l
344.168 476.263 l
344.580 476.123 l
344.925 476.007 l
345.329 475.873 l
345.714 475.747 l
346.058 475.635 l
346.444 475.510 l
346.834 475.386 l
347.221 475.264 l
347.580 475.152 l
347.952 475.037 l
348.337 474.919 l
348.720 474.803 l
349.114 474.685 l
349.462 474.582 l
349.853 474.468 l
350.245 474.355 l
350.624 474.247 l
350.967 474.150 l
351.376 474.036 l
351.722 473.940 l
352.125 473.831 l
352.481 473.735 l
352.872 473.631 l
353.244 473.534 l
353.633 473.433 l
353.990 473.343 l
354.374 473.246 l
354.774 473.147 l
355.122 473.062 l
355.498 472.971 l
355.886 472.879 l
356.266 472.790 l
356.633 472.706 l
357.041 472.613 l
357.408 472.532 l
357.799 472.446 l
358.154 472.369 l
358.542 472.287 l
358.907 472.211 l
359.288 472.133 l
359.661 472.058 l
360.051 471.981 l
360.427 471.908 l
360.812 471.834 l
361.193 471.763 l
361.544 471.699 l
361.945 471.627 l
362.304 471.564 l
362.687 471.498 l
363.054 471.436 l
363.461 471.369 l
363.813 471.313 l
364.213 471.250 l
364.578 471.194 l
364.977 471.134 l
365.321 471.084 l
365.713 471.029 l
366.091 470.976 l
366.469 470.925 l
366.846 470.876 l
367.208 470.830 l
367.600 470.782 l
367.973 470.737 l
368.365 470.692 l
368.721 470.652 l
369.114 470.609 l
369.490 470.570 l
369.865 470.533 l
370.257 470.495 l
370.618 470.461 l
370.988 470.428 l
371.396 470.394 l
371.766 470.364 l
372.144 470.334 l
372.529 470.306 l
372.882 470.282 l
373.259 470.257 l
373.632 470.233 l
374.032 470.210 l
374.385 470.191 l
374.792 470.171 l
375.160 470.153 l
375.523 470.138 l
375.914 470.123 l
376.307 470.109 l
376.664 470.098 l
377.043 470.088 l
377.413 470.079 l
377.815 470.071 l
378.162 470.066 l
378.560 470.061 l
378.935 470.058 l
379.306 470.057 l
379.678 470.057 l
380.057 470.058 l
380.458 470.061 l
380.827 470.066 l
381.190 470.071 l
381.579 470.079 l
381.967 470.088 l
382.315 470.097 l
382.727 470.110 l
383.072 470.122 l
383.475 470.138 l
383.860 470.154 l
384.204 470.170 l
384.591 470.190 l
384.980 470.211 l
385.368 470.234 l
385.727 470.256 l
386.099 470.280 l
386.483 470.307 l
386.867 470.335 l
387.261 470.366 l
387.608 470.394 l
387.999 470.427 l
388.392 470.462 l
388.770 470.497 l
389.114 470.531 l
389.522 470.572 l
389.869 470.608 l
390.271 470.651 l
390.628 470.691 l
391.019 470.736 l
391.391 470.781 l
391.779 470.829 l
392.136 470.874 l
392.521 470.924 l
392.921 470.978 l
393.269 471.026 l
393.644 471.079 l
394.033 471.136 l
394.412 471.193 l
394.780 471.249 l
395.188 471.313 l
395.554 471.372 l
395.946 471.437 l
396.301 471.496 l
396.688 471.563 l
397.053 471.627 l
397.435 471.695 l
397.808 471.764 l
398.198 471.836 l
398.574 471.908 l
398.958 471.983 l
399.340 472.058 l
399.690 472.129 l
400.092 472.211 l
400.451 472.286 l
400.834 472.367 l
401.200 472.446 l
401.607 472.535 l
401.960 472.614 l
402.360 472.705 l
402.724 472.788 l
403.123 472.882 l
403.467 472.963 l
403.859 473.058 l
404.238 473.150 l
404.616 473.244 l
404.993 473.338 l
405.355 473.431 l
405.746 473.532 l
406.119 473.629 l
406.512 473.733 l
406.868 473.829 l
407.260 473.936 l
407.636 474.039 l
408.012 474.144 l
408.404 474.255 l
408.765 474.358 l
409.135 474.465 l
409.543 474.584 l
409.913 474.693 l
410.291 474.807 l
410.675 474.923 l
411.028 475.031 l
411.405 475.147 l
411.779 475.264 l
412.179 475.390 l
412.532 475.503 l
412.939 475.634 l
413.306 475.754 l
413.670 475.873 l
414.061 476.003 l
414.453 476.135 l
414.811 476.256 l
415.190 476.385 l
415.560 476.513 l
415.961 476.652 l
416.308 476.774 l
416.707 476.915 l
417.082 477.049 l
417.453 477.183 l
417.825 477.318 l
418.203 477.457 l
418.605 477.606 l
418.973 477.743 l
419.337 477.880 l
419.725 478.027 l
420.113 478.175 l
420.461 478.309 l
420.873 478.469 l
421.218 478.604 l
421.622 478.762 l
422.007 478.915 l
422.351 479.053 l
422.738 479.208 l
423.127 479.366 l
423.514 479.525 l
423.873 479.672 l
424.245 479.826 l
424.630 479.987 l
425.013 480.148 l
425.407 480.315 l
425.755 480.462 l
426.146 480.630 l
426.538 480.799 l
426.917 480.964 l
427.260 481.114 l
427.669 481.293 l
428.015 481.446 l
428.418 481.625 l
428.774 481.785 l
429.165 481.961 l
429.537 482.130 l
429.926 482.307 l
430.283 482.470 l
430.667 482.648 l
431.067 482.833 l
431.415 482.995 l
431.791 483.172 l
432.179 483.355 l
432.559 483.535 l
432.926 483.710 l
433.334 483.906 l
433.701 484.082 l
434.092 484.272 l
434.447 484.445 l
434.835 484.634 l
435.200 484.814 l
435.581 485.002 l
435.954 485.188 l
436.345 485.383 l
436.720 485.571 l
437.105 485.765 l
437.486 485.958 l
437.837 486.137 l
438.238 486.342 l
438.598 486.527 l
438.980 486.724 l
439.347 486.914 l
439.754 487.126 l
440.106 487.311 l
440.506 487.521 l
440.871 487.713 l
441.270 487.925 l
441.614 488.108 l
442.006 488.317 l
442.384 488.520 l
442.763 488.724 l
443.140 488.928 l
443.502 489.125 l
443.893 489.339 l
444.266 489.543 l
444.659 489.759 l
445.014 489.955 l
445.407 490.173 l
445.783 490.382 l
446.158 490.592 l
446.550 490.812 l
446.911 491.015 l
447.281 491.224 l
447.689 491.456 l
448.059 491.666 l
448.437 491.882 l
448.822 492.102 l
449.175 492.306 l
449.552 492.523 l
449.926 492.740 l
450.325 492.972 l
450.678 493.178 l
451.086 493.416 l
451.453 493.632 l
451.817 493.846 l
452.207 494.077 l
452.600 494.310 l
452.957 494.522 l
453.336 494.749 l
453.706 494.970 l
454.108 495.211 l
454.455 495.421 l
454.854 495.662 l
455.228 495.889 l
455.600 496.115 l
455.971 496.341 l
456.350 496.573 l
456.752 496.819 l
457.120 497.046 l
457.483 497.270 l
457.872 497.511 l
458.260 497.751 l
458.608 497.968 l
459.020 498.225 l
459.365 498.441 l
459.769 498.694 l
460.154 498.937 l
460.497 499.154 l
460.884 499.398 l
461.273 499.645 l
461.661 499.892 l
462.020 500.121 l
462.392 500.359 l
462.776 500.605 l
463.160 500.852 l
463.554 501.106 l
463.901 501.330 l
464.292 501.583 l
464.685 501.838 l
465.063 502.084 l
465.407 502.309 l
465.816 502.576 l
466.162 502.803 l
466.564 503.067 l
466.921 503.302 l
467.312 503.560 l
467.684 503.806 l
468.072 504.064 l
468.429 504.301 l
468.814 504.557 l
469.214 504.824 l
469.562 505.057 l
469.937 505.309 l
470.326 505.570 l
470.705 505.826 l
471.073 506.074 l
471.481 506.350 l
471.848 506.598 l
472.239 506.864 l
472.594 507.105 l
472.982 507.370 l
473.346 507.619 l
473.728 507.880 l
474.101 508.136 l
474.491 508.405 l
474.867 508.664 l
475.252 508.929 l
475.633 509.193 l
475.983 509.436 l
476.385 509.714 l
476.744 509.964 l
477.127 510.231 l
477.494 510.487 l
477.901 510.772 l
478.253 511.019 l
478.653 511.299 l
479.018 511.556 l
479.416 511.837 l
479.760 512.080 l
480.152 512.357 l
480.531 512.625 l
480.909 512.893 l
481.286 513.161 l
481.648 513.419 l
482.040 513.698 l
482.413 513.965 l
482.805 514.246 l
483.161 514.500 l
483.553 514.782 l
483.930 515.053 l
484.305 515.323 l
484.697 515.606 l
485.058 515.867 l
485.428 516.135 l
485.836 516.431 l
486.206 516.699 l
486.584 516.974 l
486.968 517.254 l
487.322 517.512 l
487.698 517.787 l
488.072 518.061 l
488.472 518.354 l
488.825 518.613 l
489.232 518.912 l
489.600 519.182 l
489.963 519.450 l
490.354 519.739 l
490.747 520.029 l
491.104 520.293 l
491.853 520.849 l
492.254 521.148 l
492.601 521.406 l
493.000 521.703 l
493.375 521.983 l
493.746 522.261 l
494.118 522.539 l
494.497 522.823 l
494.898 523.124 l
495.266 523.401 l
495.630 523.674 l
496.019 523.967 l
496.406 524.259 l
496.754 524.522 l
497.167 524.834 l
497.512 525.095 l
497.915 525.401 l
498.644 525.955 l
499.031 526.249 l
499.807 526.841 l
500.166 527.116 l
500.923 527.694 l
501.701 528.291 l
502.048 528.558 l
502.439 528.858 l
503.210 529.452 l
503.554 529.717 l
503.962 530.033 l
504.308 530.301 l
504.711 530.613 l
505.067 530.889 l
505.831 531.481 l
506.219 531.783 l
506.576 532.061 l
506.961 532.361 l
507.360 532.673 l
508.084 533.238 l
508.852 533.840 l
509.628 534.448 l
510.386 535.044 l
511.128 535.629 l
511.874 536.218 l
512.247 536.512 l
513.014 537.119 l
513.398 537.424 l
514.130 538.005 l
514.531 538.324 l
515.274 538.914 l
516.047 539.531 l
516.800 540.132 l
517.563 540.743 l
518.677 541.637 l
519.433 542.244 l
520.186 542.850 l
520.952 543.468 l
521.700 544.072 l
522.076 544.376 l
522.844 544.997 l
523.574 545.590 l
524.352 546.222 l
525.115 546.842 l
525.845 547.437 l
526.619 548.068 l
527.379 548.689 l
528.110 549.288 l
528.893 549.930 l
529.630 550.534 l
530.401 551.168 l
531.147 551.782 l
532.264 552.703 l
533.413 553.653 l
534.165 554.275 l
534.901 554.885 l
536.062 555.848 l
537.177 556.776 l
538.313 557.722 l
539.069 558.354 l
540.195 559.294 l
541.357 560.267 l
542.109 560.898 l
543.214 561.826 l
544.366 562.795 l
545.855 564.050 l
546.999 565.016 l
548.532 566.313 l
549.640 567.252 l
551.160 568.544 l
552.276 569.493 l
553.420 570.468 l
554.946 571.770 l
556.446 573.052 l
557.941 574.334 l
559.454 575.632 l
560.990 576.953 l
562.877 578.579 l
564.765 580.210 l
566.256 581.500 l
567.776 582.817 l
569.293 584.134 l
571.191 585.784 l
573.048 587.401 l
574.593 588.750 l
576.460 590.382 l
578.341 592.029 l
580.255 593.708 l
582.512 595.692 l
584.377 597.334 l
586.679 599.364 l
588.540 601.009 l
590.825 603.030 l
593.457 605.365 l
596.088 607.702 l
598.369 609.733 l
600.645 611.762 l
603.265 614.101 l
605.923 616.479 l
608.557 618.841 l
611.606 621.578 l
614.606 624.277 l
617.271 626.678 l
621.016 630.058 l
624.434 633.149 l
628.219 636.580 l
631.604 639.652 l
635.747 643.420 l
639.908 647.212 l
643.690 650.664 l
647.485 654.134 l
652.753 658.960 l
657.654 663.458 l
661.438 666.937 l
667.118 672.167 l
672.019 676.689 l
678.054 682.267 l
684.108 687.871 l
690.153 693.478 l
696.952 699.795 l
705.264 707.533 l
713.184 714.920 l
721.880 723.045 l
731.711 732.249 l
741.127 741.080 l
752.454 751.723 l
757.000 756.000 l
S
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
q
[ 15.0000 5.00000 ] 0 d
1.00000 -1.00000 758.000 758.000 rc
newpath
2.00000 744.728 m
757.000 12.2712 l
S
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
q
[ 15.0000 5.00000 ] 0 d
1.00000 -1.00000 758.000 758.000 rc
newpath
2.00000 12.2712 m
757.000 744.728 l
S
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
2.00000 378.500 m
757.000 378.500 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
557 389 23 37 rc
newpath
562.406 405.875 m
567.687 404.968 l
568.645 406.468 569.322 408.125 569.718 409.937  c
570.708 408.468 571.453 407.442 571.953 406.859  c
572.630 406.067 573.190 405.554 573.632 405.320  c
574.075 405.085 574.541 404.968 575.031 404.968  c
575.583 404.968 576.007 405.119 576.304 405.421  c
576.601 405.724 576.750 406.130 576.750 406.640  c
576.750 407.130 576.601 407.528 576.304 407.835  c
576.007 408.143 575.640 408.296 575.203 408.296  c
574.880 408.296 574.507 408.239 574.085 408.125  c
573.664 408.010 573.375 407.953 573.218 407.953  c
572.791 407.953 572.385 408.104 572.000 408.406  c
571.479 408.822 570.833 409.703 570.062 411.046  c
570.927 414.078 571.614 415.927 572.125 416.593  c
572.427 416.989 572.734 417.187 573.046 417.187  c
573.307 417.187 573.536 417.119 573.734 416.984  c
574.026 416.776 574.474 416.244 575.078 415.390  c
575.625 415.718 l
574.739 417.145 573.869 418.156 573.015 418.750  c
572.369 419.197 571.734 419.421 571.109 419.421  c
570.463 419.421 569.927 419.278 569.500 418.992  c
569.072 418.705 568.692 418.237 568.359 417.585  c
568.026 416.934 567.630 415.890 567.171 414.453  c
565.994 415.963 565.070 417.062 564.398 417.750  c
563.726 418.437 563.169 418.888 562.726 419.101  c
562.283 419.315 561.807 419.421 561.296 419.421  c
560.776 419.421 560.362 419.270 560.054 418.968  c
559.747 418.666 559.593 418.270 559.593 417.781  c
559.593 417.270 559.760 416.849 560.093 416.515  c
560.427 416.182 560.849 416.015 561.359 416.015  c
561.630 416.015 561.937 416.099 562.281 416.265  c
562.791 416.505 563.156 416.625 563.375 416.625  c
563.666 416.625 563.927 416.562 564.156 416.437  c
564.468 416.291 564.854 415.963 565.312 415.453  c
565.593 415.140 566.114 414.474 566.875 413.453  c
565.906 409.869 565.151 407.724 564.609 407.015  c
564.265 406.557 563.828 406.328 563.296 406.328  c
563.026 406.328 562.692 406.369 562.296 406.453  c
562.406 405.875 l
h
f
Q
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
Q
2 J
0 j
q
0 J
1 j
newpath
379.500 756.000 m
379.500 1.00000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
339 171 21 37 rc
newpath
343.781 188.328 m
348.453 186.968 l
348.828 187.437 349.088 187.875 349.234 188.281  c
349.505 189.000 349.697 189.989 349.812 191.250  c
350.020 193.729 350.166 196.380 350.250 199.203  c
351.333 197.776 352.567 195.890 353.953 193.546  c
354.380 192.849 354.593 192.182 354.593 191.546  c
354.593 191.161 354.349 190.791 353.859 190.437  c
353.369 190.083 353.065 189.807 352.945 189.609  c
352.825 189.411 352.765 189.156 352.765 188.843  c
352.765 188.343 352.950 187.906 353.320 187.531  c
353.690 187.156 354.135 186.968 354.656 186.968  c
355.208 186.968 355.690 187.179 356.101 187.601  c
356.513 188.023 356.718 188.526 356.718 189.109  c
356.718 189.776 356.528 190.557 356.148 191.453  c
355.768 192.349 354.880 193.880 353.484 196.046  c
351.703 198.828 349.953 201.229 348.234 203.250  c
347.140 204.541 346.255 205.474 345.578 206.046  c
344.901 206.619 344.197 207.072 343.468 207.406  c
343.031 207.593 342.604 207.687 342.187 207.687  c
341.604 207.687 341.109 207.487 340.703 207.085  c
340.296 206.684 340.093 206.203 340.093 205.640  c
340.093 205.088 340.278 204.622 340.648 204.242  c
341.018 203.862 341.447 203.671 341.937 203.671  c
342.552 203.671 343.119 203.994 343.640 204.640  c
343.984 205.067 344.265 205.281 344.484 205.281  c
344.713 205.281 344.942 205.218 345.171 205.093  c
345.474 204.927 345.895 204.552 346.437 203.968  c
346.500 202.708 346.531 201.755 346.531 201.109  c
346.531 200.234 346.489 199.010 346.406 197.437  c
346.156 191.671 l
346.062 190.619 345.833 189.859 345.468 189.390  c
345.187 189.046 344.817 188.875 344.359 188.875  c
344.192 188.875 344.000 188.890 343.781 188.921  c
343.781 188.328 l
h
f
Q
cliprestore
newpath
0 0 m
0 758.000 l
758.000 758.000 l
758.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
Q
2 J
0 j
Q
Q
cliprestore
0 0 768 768 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
